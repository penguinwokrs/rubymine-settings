<templateSet group="Angular2">
  <template name="ng2-common-component" value="import {Component, Provider, forwardRef}         from '@angular/core';&#10;import {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';&#10;&#10;declare let $: any;&#10;&#10;const $CONTROL_ACCESSOR_NAME$_VALUE_ACCESSOR: Provider = new Provider(NG_VALUE_ACCESSOR, {&#10;  useExisting: forwardRef(() =&gt; $COMPONENT_NAME$Component),&#10;  multi: true&#10;});&#10;&#10;@Component({&#10;  selector: '$SELECT_NAME$',&#10;  providers: [&#10;    $CONTROL_ACCESSOR_NAME$_VALUE_ACCESSOR,&#10;  ],&#10;  directives: [],&#10;  template: require('./$SELECT_NAME$.component.html')&#10;})&#10;&#10;export class $COMPONENT_NAME$Component implements ControlValueAccessor {&#10;  value: any;&#10;&#10;  onChange: Function = () =&gt; {};&#10;  onTouched: Function = () =&gt; {};&#10;&#10;  constructor(){ }&#10;&#10;  ngOnInit() {}&#10;&#10;  writeValue(value: any) {this.value = value;}&#10;&#10;  registerOnChange(fn: (value: any) =&gt; any): void { this.onChange = fn; }&#10;&#10;  registerOnTouched(fn: () =&gt; any): void { this.onTouched = fn; }&#10;}" description="ng2-common-component" toReformat="false" toShortenFQNames="true">
    <variable name="CONTROL_ACCESSOR_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COMPONENT_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SELECT_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>